# Generated by Django 3.0.5 on 2020-06-09 18:16

import components.core.packages.lookups
import datetime
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DataLakes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('core_engine_code', models.CharField(editable=False, max_length=255, verbose_name='Core Engine Code')),
                ('tenant_code', models.CharField(editable=False, max_length=255, verbose_name='Tenant')),
                ('site_code', models.CharField(editable=False, max_length=255, verbose_name='Site')),
                ('instance_code', models.CharField(editable=False, max_length=255, verbose_name='Environment/Instance')),
                ('module', models.CharField(editable=False, max_length=32, verbose_name='Module')),
                ('storage_engine_class', models.CharField(editable=False, max_length=32, verbose_name='Storage Engine Class')),
                ('data_lake_type', models.CharField(editable=False, max_length=255, verbose_name='Data Lake Type')),
                ('data_lake_sub_type', models.CharField(editable=False, max_length=255, verbose_name='Data Lake Sub Type')),
                ('data_lake_code', models.CharField(editable=False, max_length=255, verbose_name='Data Lake Code')),
                ('data_lake_description', models.TextField(editable=False, null=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active ?')),
                ('is_primary', models.BooleanField(default=True, editable=False, verbose_name='Is Primary Storage?')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created On')),
                ('last_updated_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Last Updated On')),
                ('last_updated_by', models.CharField(editable=False, max_length=64, verbose_name='Last Updated By')),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Aggregates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_code', models.CharField(editable=False, max_length=255, verbose_name='Tenant')),
                ('site_code', models.CharField(editable=False, max_length=255, verbose_name='Site')),
                ('instance_code', models.CharField(editable=False, max_length=255, verbose_name='Environment/Instance')),
                ('module', models.CharField(choices=[('ACTPBL', 'ACCOUNT PAYABLES'), ('ACTRBL', 'ACCOUNT RECEIVABLES'), ('BANK_RECO', 'BANK_RECONCILIATIONS')], editable=False, max_length=32, verbose_name='Module')),
                ('aggregate_code', models.CharField(editable=False, max_length=255, verbose_name='Aggregate Code (generated)')),
                ('aggregate_storage_properties', models.TextField(null=True, verbose_name='Storage Properties')),
                ('aggregate_description', models.TextField(null=True, verbose_name='Description')),
                ('aggregate_schema', models.TextField(editable=False, null=True, verbose_name='Schema Definition')),
                ('sequence', models.PositiveSmallIntegerField(default=1, verbose_name='Sequence')),
                ('is_incremental', models.BooleanField(default=True, verbose_name='Incremental ?')),
                ('is_rebuild', models.BooleanField(default=True, verbose_name='Rebuild Everytime ?')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active ?')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created On')),
                ('last_updated_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Last Updated On')),
                ('last_updated_by', models.CharField(editable=False, max_length=64, verbose_name='Last Updated By')),
            ],
            options={
                'db_table': 'aggregates',
            },
        ),
        migrations.CreateModel(
            name='Attributes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_code', models.CharField(editable=False, max_length=255, verbose_name='Tenant')),
                ('site_code', models.CharField(editable=False, max_length=255, verbose_name='Site')),
                ('instance_code', models.CharField(editable=False, max_length=255, verbose_name='Environment/Instance')),
                ('module', models.CharField(choices=[('ACTPBL', 'ACCOUNT PAYABLES'), ('ACTRBL', 'ACCOUNT RECEIVABLES'), ('BANK_RECO', 'BANK_RECONCILIATIONS')], editable=False, max_length=32, verbose_name='Module')),
                ('attribute_name', models.CharField(max_length=128, verbose_name='Attribute Name')),
                ('attribute_class', models.CharField(max_length=128, null=True, verbose_name='Attribute Reference Class')),
                ('attribute_description', models.CharField(max_length=255, null=True, verbose_name='Attribute Description')),
                ('attribute_display_name', models.CharField(max_length=128, verbose_name='Attribute Display Name')),
                ('attribute_type', models.CharField(choices=[('COL', 'Column'), ('DC', 'Derived Column'), ('CONSTANT', 'Constant'), ('DCF', 'Derived Column using Function'), ('PC', 'Partition Column'), ('SYS', 'System Generated Column')], max_length=32, verbose_name='Attribute Type')),
                ('attribute_reference', models.CharField(max_length=255, null=True, verbose_name='Attribute Reference')),
                ('attribute_data_type', models.CharField(choices=[('S', 'String'), ('I', 'Inter'), ('D', 'Dictionary'), ('F', 'Float'), ('SET', 'Set'), ('B', 'Boolean'), ('D', 'Date'), ('DT', 'Date Time'), ('A', 'Array'), ('BYT', 'Bytes')], max_length=32, verbose_name='Attribute Data Type')),
                ('attribute_check_condition', models.CharField(max_length=256, null=True, verbose_name='Attribute Check Condition')),
                ('attribute_min_length', models.PositiveSmallIntegerField(null=True)),
                ('attribute_max_length', models.PositiveIntegerField(null=True)),
                ('attribute_precision', models.PositiveSmallIntegerField(null=True)),
                ('attribute_scale', models.PositiveSmallIntegerField(null=True)),
                ('attribute_import_seq', models.PositiveSmallIntegerField(null=True)),
                ('attribute_save_seq', models.PositiveSmallIntegerField(null=True)),
                ('attribute_text_pattern', models.CharField(max_length=32, null=True, verbose_name='Attribute Text/Date Pattern (regex)')),
                ('attribute_format_class', models.CharField(choices=[('EMAIL', 'Email'), ('GSTIN', 'GSTIN'), ('PAN', 'PANCARD'), ('SSN', 'SSN'), ('HSN', 'HSN'), ('CUR', 'CURRENCY')], max_length=32, null=True, verbose_name='Attribute Data Formats (inbuilt)')),
                ('attribute_custom_format', models.CharField(choices=[('EMAIL', 'Email'), ('GSTIN', 'GSTIN'), ('PAN', 'PANCARD'), ('SSN', 'SSN'), ('HSN', 'HSN'), ('CUR', 'CURRENCY')], max_length=32, null=True, verbose_name='Attribute Custom Data Formats')),
                ('attribute_enums', models.CharField(max_length=256, null=True, verbose_name='Attribute Enums')),
                ('attribute_formula', models.CharField(max_length=256, null=True, verbose_name='Attribute Formula (derived column)')),
                ('attribute_default_value', models.CharField(max_length=32, null=True, verbose_name='Attribute Default Value')),
                ('attribute_pii_class', models.CharField(choices=[('N', 'None'), ('W', 'Weak'), ('M', 'Medium'), ('S', 'Strong')], max_length=32, null=True, verbose_name='Attribute PII Category')),
                ('is_required', models.BooleanField(default=False, verbose_name='Required ?')),
                ('is_unique', models.BooleanField(default=False, verbose_name='Unique ?')),
                ('is_identity', models.BooleanField(default=False, verbose_name='Identity ?')),
                ('is_editable', models.BooleanField(default=False, verbose_name='Editable ?')),
                ('is_visible', models.BooleanField(default=True, verbose_name='Visible ?')),
                ('is_pii', models.BooleanField(default=False, verbose_name='Personal Identifiable Information ?')),
                ('is_ignore_validations', models.BooleanField(default=False, verbose_name='Ignore Validations ?')),
                ('is_encrypted', models.BooleanField(default=True, verbose_name='Encrypted ?')),
                ('is_masked', models.BooleanField(default=False, verbose_name='Masked ?')),
                ('is_partition_key', models.BooleanField(default=False, verbose_name='Partition Key ?')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active ?')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created On')),
                ('last_updated_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Last Updated On')),
                ('last_updated_by', models.CharField(editable=False, max_length=64, verbose_name='Last Updated By')),
            ],
            options={
                'db_table': 'attributes',
            },
        ),
        migrations.CreateModel(
            name='CatalogEngine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('catalog_engine_code', models.CharField(max_length=255, unique=True, verbose_name='Catalog Engine Code (generated)')),
                ('core_engine_code', models.CharField(editable=False, max_length=255, verbose_name='Core Engine Code')),
                ('tenant_code', models.CharField(max_length=255, verbose_name='Tenant')),
                ('site_code', models.CharField(editable=False, max_length=255, verbose_name='Site')),
                ('instance_code', models.CharField(editable=False, max_length=255, verbose_name='Environment/Instance')),
                ('activation_file_location', models.CharField(max_length=255, verbose_name='Activation File Location')),
                ('activation_key', models.CharField(editable=False, max_length=255, verbose_name=' Activation Key (generated)')),
                ('activation_dt', models.DateTimeField(verbose_name='Activation Date Time')),
                ('host_name', models.CharField(max_length=128, verbose_name='Host Name')),
                ('host_ip_address', models.GenericIPAddressField(verbose_name='Host IP Address')),
                ('os_release', models.CharField(max_length=32, null=True, verbose_name='OS Release Version')),
                ('release_info', models.CharField(max_length=255, null=True, verbose_name='Version Details')),
                ('validity_start_date', models.DateTimeField(null=True, verbose_name='Validity Start Date')),
                ('validity_end_date', models.DateTimeField(null=True, verbose_name='Validity End Date')),
                ('engine_properties', models.TextField(null=True, verbose_name='Engine Details')),
                ('core_engine_details', models.TextField(editable=False, verbose_name='Core Engine Details')),
                ('io_engine_details', models.TextField(editable=False, verbose_name='IO Engine Details')),
                ('is_activated', models.BooleanField(default=False, verbose_name='Activated ?')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active ?')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created On')),
                ('last_updated_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Last Updated On')),
                ('last_updated_by', models.CharField(editable=False, max_length=64, verbose_name='Last Updated By')),
            ],
            options={
                'db_table': 'engine_metadata',
            },
        ),
        migrations.CreateModel(
            name='Catalogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('catolog_code', models.CharField(editable=False, max_length=255, unique=True, verbose_name='Catalog Code (generated)')),
                ('tenant_code', models.CharField(editable=False, max_length=255, verbose_name='Tenant')),
                ('site_code', models.CharField(editable=False, max_length=255, verbose_name='Site')),
                ('instance_code', models.CharField(editable=False, max_length=255, verbose_name='Environment/Instance')),
                ('catalog_name', models.CharField(max_length=128, verbose_name='Catalog Name')),
                ('catalog_description', models.CharField(max_length=255, null=True, verbose_name='Catalog Description')),
                ('date_hierarchy', models.CharField(choices=[('YQMD', 'YEAR - QUARTER - MONTH - DAY'), ('YMD', 'YEAR - MONTH - DAY'), ('YMDW', 'YEAR - MONTH - WEEK - DAY'), ('ME', 'YEAR - MONTH - DAY - HOUR'), ('YQMDH', 'YEAR - QUARTER - MONTH - DAY - HOUR')], editable=False, max_length=32, verbose_name='Date Hierarchy')),
                ('calendar_type', models.CharField(choices=[('G', 'Gregorian'), ('J', 'Julian')], max_length=32, verbose_name='Calendar Type')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active ?')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created On')),
                ('last_updated_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Last Updated On')),
                ('last_updated_by', models.CharField(editable=False, max_length=64, verbose_name='Last Updated By')),
            ],
            options={
                'db_table': 'catalogs',
            },
        ),
        migrations.CreateModel(
            name='Containers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_code', models.CharField(editable=False, max_length=255, verbose_name='Tenant')),
                ('site_code', models.CharField(editable=False, max_length=255, verbose_name='Site')),
                ('instance_code', models.CharField(editable=False, max_length=255, verbose_name='Environment/Instance')),
                ('module', models.CharField(choices=[('ACTPBL', 'ACCOUNT PAYABLES'), ('ACTRBL', 'ACCOUNT RECEIVABLES'), ('BANK_RECO', 'BANK_RECONCILIATIONS')], max_length=32, verbose_name='Module')),
                ('container_code', models.CharField(editable=False, max_length=255, verbose_name='Container Code (generated)')),
                ('container_type', models.CharField(choices=[('T', 'Time Series'), ('E', 'Entity Based')], max_length=255, verbose_name='Container Type')),
                ('container_name', models.CharField(max_length=255, verbose_name='Container Name')),
                ('container_description', models.TextField(null=True, verbose_name='Description')),
                ('processing_sequence', models.PositiveSmallIntegerField(default=1, verbose_name='Sequence')),
                ('container_category', models.CharField(choices=[('G', 'Generic'), ('U', 'User Defined')], max_length=255, verbose_name='Container Category')),
                ('container_storage_properties', models.TextField(null=True, verbose_name='Storage Properties')),
                ('container_schema', models.TextField(editable=False, null=True, verbose_name='Schema Definition')),
                ('filter_conditions', models.TextField(null=True, verbose_name='Filter Conditions')),
                ('filter_columns', models.TextField(null=True, verbose_name='Filter Columns')),
                ('is_default', models.BooleanField(default=False, verbose_name='Is Default ?')),
                ('is_incremental', models.BooleanField(default=True, verbose_name='Incremental ?')),
                ('is_initial_load', models.BooleanField(default=True, verbose_name='Initial Load ?')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active ?')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created On')),
                ('last_updated_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Last Updated On')),
                ('last_updated_by', models.CharField(editable=False, max_length=64, verbose_name='Last Updated By')),
                ('catalog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Catalogs', verbose_name='Catalog')),
            ],
            options={
                'db_table': 'containers',
            },
        ),
        migrations.CreateModel(
            name='DashboardComponents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('component_code', models.CharField(editable=False, max_length=255, verbose_name='Dashboard Code (generated)')),
                ('component_category', models.CharField(choices=[('T', 'Time Series'), ('V', 'Value Based')], max_length=32, verbose_name='Component Category')),
                ('component_type', models.CharField(choices=[('W', 'Widget'), ('T', 'Tabular'), ('L', 'Label')], max_length=32, verbose_name='Component Type')),
                ('component_name', models.CharField(max_length=128, verbose_name='Dashboard Name')),
                ('component_description', models.TextField(null=True, verbose_name='Dashboard Description')),
                ('component_reference_class', models.CharField(max_length=255, null=True, verbose_name='Component Class Reference')),
                ('sequence', models.PositiveSmallIntegerField(default=1, verbose_name='Sequence')),
                ('display_properties', models.TextField(verbose_name='Display Properties')),
                ('quick_option', models.CharField(choices=[('TOP', 'TOP VALUES'), ('LAST', 'LAST VALUES')], max_length=32, verbose_name='Quick Option')),
                ('quick_option_value', models.PositiveIntegerField(verbose_name='Quick Option Value')),
                ('data_filter', models.TextField(null=True, verbose_name='Data Filters')),
                ('data_source_methods', models.TextField(verbose_name='Data Source')),
                ('is_system_defined', models.BooleanField(default=True, verbose_name='Is System Defined?')),
                ('is_incremental', models.BooleanField(default=True, verbose_name='Incremental ?')),
                ('is_rebuild', models.BooleanField(default=False, verbose_name='Rebuild Everytime ?')),
                ('is_auto_referesh', models.BooleanField(default=False, verbose_name='Auto Refresh ?')),
                ('refresh_interval', models.PositiveSmallIntegerField(default=0, verbose_name='Auto Refresh Interval (ms)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active ?')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created On')),
                ('last_updated_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Last Updated On')),
                ('last_updated_by', models.CharField(editable=False, max_length=64, verbose_name='Last Updated By')),
                ('aggregate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Aggregates', verbose_name='Aggregate')),
                ('container', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Containers', verbose_name='Container')),
            ],
            options={
                'db_table': 'dashboard_components',
            },
        ),
        migrations.CreateModel(
            name='DataModels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datamodel_code', models.CharField(editable=False, max_length=255, unique=True, verbose_name='Datamodel Code (generated)')),
                ('tenant_code', models.CharField(editable=False, max_length=255, verbose_name='Tenant')),
                ('site_code', models.CharField(editable=False, max_length=255, verbose_name='Site')),
                ('module', models.CharField(choices=[('ACTPBL', 'ACCOUNT PAYABLES'), ('ACTRBL', 'ACCOUNT RECEIVABLES'), ('BANK_RECO', 'BANK_RECONCILIATIONS')], editable=False, max_length=32, verbose_name='Module')),
                ('version', models.PositiveSmallIntegerField(default=1)),
                ('is_active', models.BooleanField(default=True, verbose_name='Active ?')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created On')),
                ('last_updated_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Last Updated On')),
                ('last_updated_by', models.CharField(editable=False, max_length=64, verbose_name='Last Updated By')),
                ('catalog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Catalogs')),
            ],
            options={
                'db_table': 'datamodels',
            },
        ),
        migrations.CreateModel(
            name='Datasets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_code', models.CharField(editable=False, max_length=255, verbose_name='Tenant')),
                ('site_code', models.CharField(editable=False, max_length=255, verbose_name='Site')),
                ('instance_code', models.CharField(editable=False, max_length=255, verbose_name='Environment/Instance')),
                ('module', models.CharField(choices=[('ACTPBL', 'ACCOUNT PAYABLES'), ('ACTRBL', 'ACCOUNT RECEIVABLES'), ('BANK_RECO', 'BANK_RECONCILIATIONS')], editable=False, max_length=32, verbose_name='Module')),
                ('dataset_code', models.CharField(editable=False, max_length=255, unique=True, verbose_name='Dataset Code (generated)')),
                ('dataset_name', models.CharField(max_length=128, verbose_name='Dataset Name')),
                ('dataset_description', models.CharField(max_length=255, null=True, verbose_name='Dataset Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active ?')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created On')),
                ('last_updated_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Last Updated On')),
                ('last_updated_by', models.CharField(editable=False, max_length=64, verbose_name='Last Updated By')),
                ('catalog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Catalogs', verbose_name='Catalog')),
            ],
            options={
                'db_table': 'datasets',
            },
        ),
        migrations.CreateModel(
            name='DataSources',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_connection_code', models.CharField(editable=False, max_length=255, unique=True, verbose_name='Datasource Connection Code (generated)')),
                ('tenant_code', models.CharField(editable=False, max_length=255, verbose_name='Tenant')),
                ('site_code', models.CharField(editable=False, max_length=255, verbose_name='Site')),
                ('instance_code', models.CharField(editable=False, max_length=255, verbose_name='Environment/Instance')),
                ('module', models.CharField(choices=[('ACTPBL', 'ACCOUNT PAYABLES'), ('ACTRBL', 'ACCOUNT RECEIVABLES'), ('BANK_RECO', 'BANK_RECONCILIATIONS')], editable=False, max_length=32, verbose_name='Module')),
                ('source_connector_category', models.CharField(choices=[('FF', 'FLAT FILES'), ('BIN', 'BINARY'), ('DS', 'DISTRIBUTED STORAGE'), ('DB', 'RELATIONAL DATABASES'), ('NS', 'NOSQL DATABASES'), ('CL', 'CLOUD STORAGES'), ('HT', 'HTTP API'), ('Q', 'QUEUE')], editable=False, max_length=32, verbose_name='Data Source Connector Category')),
                ('source_connector_type', models.CharField(choices=[('DFILE', 'FF - Delimited Flat File'), ('XLS', 'BIN - EXCEL FILE'), ('MYSQL', 'DB - MYSQL Database'), ('HIVE', 'DB - HIVE Database'), ('MONGO', 'NS - MONGO Database'), ('KQ', 'Q - KAFKA QUEUE'), ('S3', 'CL - S3 Connector'), ('BLB', 'CL - AZURE BLOB')], editable=False, max_length=32, verbose_name='Data Source Connector Type')),
                ('datasource_name', models.CharField(max_length=128, verbose_name='Data Source Name')),
                ('datasource_description', models.CharField(max_length=255, null=True, verbose_name='Data Source Description')),
                ('datasource_schedule', models.CharField(max_length=16)),
                ('is_batch', models.BooleanField(default=True, verbose_name='Batch Type Ingestion ?')),
                ('is_streaming', models.BooleanField(default=False, editable=False, verbose_name='Streaming Ingestion ?')),
                ('is_incremental_load', models.BooleanField(default=True, verbose_name='Incremental Load ?')),
                ('is_full_load', models.BooleanField(default=False, verbose_name='Full Load ?')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active ?')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created On')),
                ('last_updated_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Last Updated On')),
                ('last_updated_by', models.CharField(editable=False, max_length=64, verbose_name='Last Updated By')),
                ('catalog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Catalogs', verbose_name='Catalog')),
                ('datamodel', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.DataModels', verbose_name='Data model')),
            ],
            options={
                'db_table': 'data_sources',
            },
        ),
        migrations.CreateModel(
            name='Entities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_code', models.CharField(editable=False, max_length=255, unique=True, verbose_name='Entity Code')),
                ('tenant_code', models.CharField(editable=False, max_length=255, verbose_name='Tenant')),
                ('site_code', models.CharField(editable=False, max_length=255, verbose_name='Site')),
                ('instance_code', models.CharField(editable=False, max_length=255, verbose_name='Environment/Instance')),
                ('entity_name', models.CharField(max_length=128, verbose_name='Entity Name')),
                ('entity_type', models.CharField(choices=[('LE', 'Legal Entity'), ('BU', 'Business Unit'), ('BR', 'Branch Office')], max_length=32, verbose_name='Entity Type')),
                ('entity_sub_type', models.CharField(choices=[('HO', 'Head Office'), ('DIV', 'Division'), ('WH', 'Warehouse'), ('DC', 'Distribution Center'), ('RO', 'Regional Office'), ('MO', 'Marketing Office'), ('SO', 'Sales Office')], max_length=32, null=True, verbose_name='Entity Sub Type')),
                ('parent_entity', models.PositiveIntegerField(null=True, verbose_name='Parent Entity')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active ?')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created On')),
                ('last_updated_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Last Updated On')),
                ('last_updated_by', models.CharField(editable=False, max_length=64, verbose_name='Last Updated By')),
            ],
            options={
                'db_table': 'entities',
            },
        ),
        migrations.CreateModel(
            name='OrgHierarchyTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_code', models.CharField(editable=False, max_length=255, verbose_name='Tenant')),
                ('site_code', models.CharField(editable=False, max_length=255, verbose_name='Site')),
                ('instance_code', models.CharField(editable=False, max_length=255, verbose_name='Environment/Instance')),
                ('type', models.CharField(max_length=32, verbose_name='Hierarchy Type')),
                ('description', models.CharField(max_length=255, null=True, verbose_name='Description')),
                ('hierarchy_class_reference', models.CharField(max_length=32, null=True, verbose_name='Hierarchy Class')),
                ('is_system', models.BooleanField(default=False, editable=False, verbose_name='System Based ?')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active ?')),
                ('created_on', models.DateTimeField(default=datetime.datetime.now, editable=False, verbose_name='Created On')),
                ('last_updated_on', models.DateTimeField(auto_now_add=True, verbose_name='Last Updated On')),
                ('last_updated_by', models.CharField(editable=False, max_length=64, verbose_name='Last Updated By')),
            ],
            options={
                'db_table': 'org_hierarchy_types',
            },
        ),
        migrations.CreateModel(
            name='OrgHierarchy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_code', models.CharField(editable=False, max_length=255, verbose_name='Tenant')),
                ('site_code', models.CharField(editable=False, max_length=255, verbose_name='Site')),
                ('instance_code', models.CharField(editable=False, max_length=255, verbose_name='Environment/Instance')),
                ('hierarchy_name', models.CharField(max_length=32, verbose_name='Hierarchy Type')),
                ('hierarchy_description', models.CharField(max_length=255, null=True, verbose_name='Description')),
                ('level', models.PositiveSmallIntegerField(default=1)),
                ('is_active', models.BooleanField(default=True, verbose_name='Active ?')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created On')),
                ('last_updated_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Last Updated On')),
                ('last_updated_by', models.CharField(editable=False, max_length=64, verbose_name='Last Updated By')),
                ('hierarchy_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.OrgHierarchyTypes', verbose_name='Hierarchy Type')),
                ('parent_hierarchy', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.OrgHierarchy')),
            ],
            options={
                'db_table': 'org_hierarchies',
            },
        ),
        migrations.CreateModel(
            name='Objects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_code', models.CharField(editable=False, max_length=255, unique=True, verbose_name='Object Code (generated)')),
                ('tenant_code', models.CharField(editable=False, max_length=255, verbose_name='Tenant')),
                ('site_code', models.CharField(editable=False, max_length=255, verbose_name='Site')),
                ('instance_code', models.CharField(editable=False, max_length=255, verbose_name='Environment/Instance')),
                ('module', models.CharField(choices=[('ACTPBL', 'ACCOUNT PAYABLES'), ('ACTRBL', 'ACCOUNT RECEIVABLES'), ('BANK_RECO', 'BANK_RECONCILIATIONS')], editable=False, max_length=32, verbose_name='Module')),
                ('object_name', models.CharField(max_length=64, verbose_name='Object Name')),
                ('object_reference_class', models.CharField(max_length=128, verbose_name='Object Class')),
                ('object_description', models.CharField(max_length=255, verbose_name='Object Name')),
                ('object_class', models.CharField(choices=[('E', 'Event Based (Time Series)'), ('M', 'Master Data'), ('P', 'Persona/Entity Based')], max_length=32, verbose_name='Object Class')),
                ('is_validate_data', models.BooleanField(default=True, verbose_name='Validate Data ?')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active ?')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created On')),
                ('last_updated_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Last Updated On')),
                ('last_updated_by', models.CharField(editable=False, max_length=64, verbose_name='Last Updated By')),
                ('catalog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Catalogs')),
                ('datamodel', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.DataModels')),
            ],
            options={
                'db_table': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Measures',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_code', models.CharField(editable=False, max_length=255, verbose_name='Tenant')),
                ('site_code', models.CharField(editable=False, max_length=255, verbose_name='Site')),
                ('instance_code', models.CharField(editable=False, max_length=255, verbose_name='Environment/Instance')),
                ('module', models.CharField(choices=[('ACTPBL', 'ACCOUNT PAYABLES'), ('ACTRBL', 'ACCOUNT RECEIVABLES'), ('BANK_RECO', 'BANK_RECONCILIATIONS')], editable=False, max_length=32, verbose_name='Module')),
                ('measure_code', models.CharField(editable=False, max_length=255, verbose_name='Measure Code (generated)')),
                ('measure_description', models.CharField(max_length=255, null=True, verbose_name='Measure Description')),
                ('measure_type', models.CharField(choices=[('V', 'By Value'), ('C', 'By Count')], max_length=256, verbose_name='Measure Types (multi-choice)')),
                ('measure_operators', models.CharField(choices=[('S', 'SUM'), ('C', 'COUNT'), ('MIN', 'MIN'), ('MAX', 'MAX'), ('AVG', 'AVG')], max_length=256, verbose_name='Measure Operators (multi-choice)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active ?')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created On')),
                ('last_updated_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Last Updated On')),
                ('last_updated_by', models.CharField(editable=False, max_length=64, verbose_name='Last Updated By')),
                ('attribute', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Attributes')),
                ('catalog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Catalogs', verbose_name='Catalog')),
                ('datamodel', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.DataModels', verbose_name='DataModel')),
                ('object', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Objects', verbose_name='Object')),
            ],
            options={
                'db_table': 'measures',
            },
        ),
        migrations.CreateModel(
            name='Mappings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_attribute', models.CharField(max_length=255, verbose_name='Source Attribute Name (column)')),
                ('target_attribute', models.CharField(max_length=255, verbose_name='Source Attribute Name (column)')),
                ('transformation_function', models.CharField(choices=[('CONCAT', 'Concatenate String')], editable=False, max_length=32, null=True, verbose_name='Transformation Function')),
                ('transformed_value', models.CharField(max_length=255, null=True, verbose_name='Transformed Value')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active ?')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created On')),
                ('last_updated_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Last Updated On')),
                ('last_updated_by', models.CharField(editable=False, max_length=64, verbose_name='Last Updated By')),
                ('data_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.DataSources', verbose_name='DataSource')),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Datasets', verbose_name='Dataset')),
            ],
            options={
                'db_table': 'mappings',
            },
        ),
        migrations.CreateModel(
            name='LookupValues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_code', models.CharField(editable=False, max_length=255, verbose_name='Tenant')),
                ('site_code', models.CharField(editable=False, max_length=255, verbose_name='Site')),
                ('instance_code', models.CharField(editable=False, max_length=255, verbose_name='Environment/Instance')),
                ('lookup_name', models.CharField(max_length=32, verbose_name='Lookup Name')),
                ('lookup_code', models.CharField(max_length=6, verbose_name='Lookup Code')),
                ('lookup_value', models.CharField(max_length=32, verbose_name='Lookup Value')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active ?')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created On')),
                ('last_updated_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Last Updated On')),
                ('last_updated_by', models.CharField(editable=False, max_length=64, verbose_name='Last Updated By')),
                ('parent_lookup', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.LookupValues', verbose_name='Parent Lookup')),
            ],
            options={
                'db_table': 'lookups',
            },
        ),
        migrations.CreateModel(
            name='EntityLocations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_type', models.CharField(choices=[('H', 'Home'), ('O', 'Office')], max_length=32, verbose_name='Address Type')),
                ('address_line_1', models.CharField(max_length=255, null=True, verbose_name='Address Line 1')),
                ('address_line_2', models.CharField(max_length=255, null=True, verbose_name='Address Line 2')),
                ('address_line_3', models.CharField(max_length=255, null=True, verbose_name='Address Line 3')),
                ('city', models.CharField(max_length=128, null=True, verbose_name='City')),
                ('state', models.CharField(max_length=128, null=True, verbose_name='State')),
                ('country', models.CharField(max_length=128, null=True, verbose_name='Country')),
                ('zip_code', models.CharField(max_length=8, null=True, verbose_name='ZipCode')),
                ('is_primary_address', models.BooleanField(default=True, verbose_name='Is Primary ?')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active ?')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created On')),
                ('last_updated_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Last Updated On')),
                ('last_updated_by', models.CharField(editable=False, max_length=64, verbose_name='Last Updated By')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Entities', verbose_name='Entity')),
            ],
            options={
                'db_table': 'entity_locations',
            },
        ),
        migrations.CreateModel(
            name='EntityContacts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_person_first_name', models.CharField(max_length=64, null=True, verbose_name='First Name')),
                ('contact_person_last_name', models.CharField(max_length=64, null=True, verbose_name='Last Name')),
                ('contact_person_designation', models.CharField(max_length=32, null=True, verbose_name='Designation')),
                ('contact_Email', models.EmailField(max_length=254, null=True, verbose_name='Email Id')),
                ('contact_phone_number', models.CharField(max_length=64, null=True, verbose_name='Phone Numbers')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active ?')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created On')),
                ('last_updated_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Last Updated On')),
                ('last_updated_by', models.CharField(editable=False, max_length=64, verbose_name='Last Updated By')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Entities')),
            ],
            options={
                'db_table': 'entity_contacts',
            },
        ),
        migrations.AddField(
            model_name='entities',
            name='hierarchy',
            field=models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.OrgHierarchy', verbose_name='Hierarchy'),
        ),
        migrations.CreateModel(
            name='Dimensions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_code', models.CharField(editable=False, max_length=255, verbose_name='Tenant')),
                ('site_code', models.CharField(editable=False, max_length=255, verbose_name='Site')),
                ('instance_code', models.CharField(editable=False, max_length=255, verbose_name='Environment/Instance')),
                ('module', models.CharField(choices=[('ACTPBL', 'ACCOUNT PAYABLES'), ('ACTRBL', 'ACCOUNT RECEIVABLES'), ('BANK_RECO', 'BANK_RECONCILIATIONS')], editable=False, max_length=32, verbose_name='Module')),
                ('dimension_code', models.CharField(editable=False, max_length=255, verbose_name='Dimension Code (generated)')),
                ('dimension_description', models.CharField(max_length=255, null=True, verbose_name='Dimension Description')),
                ('dimension_type', models.CharField(choices=[('D', 'By Date'), ('V', 'By Value')], max_length=32, verbose_name='Dimension Type')),
                ('is_hierarchy', models.BooleanField(default=False, verbose_name='Hierarchy ?')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active ?')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created On')),
                ('last_updated_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Last Updated On')),
                ('last_updated_by', models.CharField(editable=False, max_length=64, verbose_name='Last Updated By')),
                ('attribute', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Attributes')),
                ('catalog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Catalogs', verbose_name='Catalog')),
                ('datamodel', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.DataModels', verbose_name='DataModel')),
                ('object', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Objects', verbose_name='Object')),
            ],
            options={
                'db_table': 'dimensions',
            },
        ),
        migrations.CreateModel(
            name='DataTargets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datatarget_code', models.CharField(editable=False, max_length=255, unique=True, verbose_name='Datatarget Code (generated)')),
                ('tenant_code', models.CharField(editable=False, max_length=255, verbose_name='Tenant')),
                ('site_code', models.CharField(editable=False, max_length=255, verbose_name='Site')),
                ('instance_code', models.CharField(editable=False, max_length=255, verbose_name='Environment/Instance')),
                ('module', models.CharField(choices=[('ACTPBL', 'ACCOUNT PAYABLES'), ('ACTRBL', 'ACCOUNT RECEIVABLES'), ('BANK_RECO', 'BANK_RECONCILIATIONS')], editable=False, max_length=32, verbose_name='Module')),
                ('datatarget_connector_type', models.CharField(choices=[('DFILE', 'Delimited Flat File'), ('MYSQL', 'MYSQL Database'), ('HIVE', 'HIVE Database'), ('MONGO', ' MONGO Database'), ('KQ', 'KAFKA QUEUE'), ('S3', 'S3 Connector'), ('BLB', 'AZURE BLOB')], editable=False, max_length=32, verbose_name='Data target Connector Type')),
                ('datatarget_name', models.CharField(max_length=128, verbose_name='Data target Name')),
                ('datatarget_description', models.CharField(max_length=255, null=True, verbose_name='Data target Description')),
                ('datatarget_properties', models.TextField(null=True)),
                ('version', models.PositiveSmallIntegerField(default=1)),
                ('is_active', models.BooleanField(default=True, verbose_name='Active ?')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created On')),
                ('last_updated_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Last Updated On')),
                ('last_updated_by', models.CharField(editable=False, max_length=64, verbose_name='Last Updated By')),
                ('catalog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Catalogs', verbose_name='Catalog')),
                ('datamodel', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.DataModels')),
                ('dataset', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Datasets')),
                ('object', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Objects')),
            ],
            options={
                'db_table': 'data_targets',
            },
        ),
        migrations.CreateModel(
            name='DataSourcesLocalFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_type', models.CharField(choices=[('D', 'Delimited'), ('X', 'MS Excel file'), ('J', 'JSON'), ('P', 'PARQUET'), ('B', 'BINARY')], max_length=32, verbose_name=' File Type')),
                ('file_extension', models.CharField(max_length=5, null=True, verbose_name='File Extension')),
                ('file_name', models.CharField(max_length=32, null=True)),
                ('file_name_regex', models.CharField(max_length=32, null=True, verbose_name='File Name Pattern')),
                ('base_folder_path', models.TextField(verbose_name='Base Folder Path')),
                ('error_folder_path', models.TextField(null=True, verbose_name='Error Folder Path')),
                ('archive_folder_path', models.TextField(null=True, verbose_name='Archive Folder Path')),
                ('delimiter', models.CharField(max_length=2, verbose_name='Delimiter')),
                ('ignore_header', models.BooleanField(default=False, verbose_name='Ignore Header ?')),
                ('start_line_number', models.PositiveSmallIntegerField(default=0)),
                ('end_line_number', models.PositiveIntegerField(default=0)),
                ('skip_lines_from_end', models.PositiveSmallIntegerField(default=0)),
                ('max_file_size_mb', models.PositiveIntegerField(default=0, verbose_name='Max File size allowed (MB)')),
                ('is_archive_enabled', models.BooleanField(default=True, verbose_name='To be Archived ?')),
                ('is_partial_ingestion', models.BooleanField(default=False, verbose_name='Partial Ingestion?')),
                ('is_encrypted', models.BooleanField(default=False, verbose_name='Is Encrypted ?')),
                ('encryption_key', models.TextField(null=True, verbose_name='Public Key for decryption')),
                ('is_folder_source', models.BooleanField(default=False, verbose_name='Use Folder as Source ?')),
                ('is_enforce_hierarchy', models.BooleanField(default=False, verbose_name='Enforce Org Hierarchy on the folder ?')),
                ('is_zipped', models.BooleanField(default=False, verbose_name='Is Zipped ?')),
                ('is_password_protected', models.BooleanField(default=False, verbose_name='Is Password Protected ?')),
                ('file_password', models.CharField(max_length=128, null=True, verbose_name='File Password')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active ?')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created On')),
                ('last_updated_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Last Updated On')),
                ('last_updated_by', models.CharField(editable=False, max_length=64, verbose_name='Last Updated By')),
                ('datasource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.DataSources', verbose_name='DataSource')),
                ('hierarchy', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.OrgHierarchy', verbose_name='Org Hierarchy')),
            ],
            options={
                'db_table': 'data_sources_file',
            },
        ),
        migrations.AddField(
            model_name='datasources',
            name='object',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Objects', verbose_name='Object'),
        ),
        migrations.AddField(
            model_name='datasets',
            name='data_source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.DataSources', verbose_name='DataSource'),
        ),
        migrations.AddField(
            model_name='datasets',
            name='datamodel',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.DataModels'),
        ),
        migrations.AddField(
            model_name='datasets',
            name='object',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Objects', verbose_name='Object/Schema'),
        ),
        migrations.CreateModel(
            name='Dashboards',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_code', models.CharField(editable=False, max_length=255, verbose_name='Tenant')),
                ('site_code', models.CharField(editable=False, max_length=255, verbose_name='Site')),
                ('instance_code', models.CharField(editable=False, max_length=255, verbose_name='Environment/Instance')),
                ('module', models.CharField(choices=[('ACTPBL', 'ACCOUNT PAYABLES'), ('ACTRBL', 'ACCOUNT RECEIVABLES'), ('BANK_RECO', 'BANK_RECONCILIATIONS')], editable=False, max_length=32, verbose_name='Module')),
                ('dashboard_type', models.CharField(choices=[('P', 'Pre Populated Dashboard'), ('R', 'Run Time Dashboard')], max_length=255, verbose_name='Dashboard Data Population type')),
                ('dashboard_code', models.CharField(editable=False, max_length=255, verbose_name='Dashboard Code (generated)')),
                ('dashboard_storage_properties', models.TextField(null=True, verbose_name='Storage Properties')),
                ('dashboard_reference_class', models.CharField(editable=False, max_length=255, null=True, verbose_name='Dashboard Reference Class')),
                ('dashboard_name', models.CharField(max_length=255, verbose_name='Dashboard Name')),
                ('dashboard_description', models.TextField(null=True, verbose_name='Dashboard Description')),
                ('sequence', models.PositiveSmallIntegerField(default=1, verbose_name='Sequence')),
                ('is_system_defined', models.BooleanField(default=True, verbose_name='Is System Defined?')),
                ('is_incremental', models.BooleanField(default=True, verbose_name='Incremental ?')),
                ('is_rebuild', models.BooleanField(default=False, verbose_name='Rebuild Everytime ?')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active ?')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created On')),
                ('last_updated_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Last Updated On')),
                ('last_updated_by', models.CharField(editable=False, max_length=64, verbose_name='Last Updated By')),
                ('catalog', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Catalogs')),
                ('datamodel', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.DataModels')),
            ],
            options={
                'db_table': 'dashboards',
            },
        ),
        migrations.CreateModel(
            name='DashboardIndicators',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('component_code', models.CharField(editable=False, max_length=255, verbose_name='Dashboard Code (generated)')),
                ('indicators', models.TextField(null=True, verbose_name='Indicators')),
                ('indicator_reference_class', models.CharField(max_length=255, null=True, verbose_name='Indicator Reference Class')),
                ('indicator_name', models.CharField(max_length=255, verbose_name='Indicator Name')),
                ('indicator_description', models.TextField(null=True, verbose_name='Indicator Description')),
                ('query_definition', models.TextField(editable=False, null=True, verbose_name='Query definition')),
                ('sequence', models.PositiveSmallIntegerField(default=1, verbose_name='Sequence')),
                ('is_system_defined', models.BooleanField(default=True, verbose_name='Is System Defined?')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active ?')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created On')),
                ('last_updated_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Last Updated On')),
                ('last_updated_by', models.CharField(editable=False, max_length=64, verbose_name='Last Updated By')),
                ('component', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.DashboardComponents', verbose_name='Component')),
                ('dashboard', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Dashboards', verbose_name='Dashboard')),
            ],
            options={
                'db_table': 'dashboard_component_indicators',
            },
        ),
        migrations.AddField(
            model_name='dashboardcomponents',
            name='dashboard',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Dashboards', verbose_name='Dashboard'),
        ),
        migrations.AddField(
            model_name='containers',
            name='datamodel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.DataModels'),
        ),
        migrations.AddField(
            model_name='containers',
            name='object',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Objects', verbose_name='Object/Schema'),
        ),
        migrations.AddField(
            model_name='catalogs',
            name='hierarchy_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.OrgHierarchyTypes', verbose_name='Hierarchy Type'),
        ),
        migrations.CreateModel(
            name='CatalogEngineActivations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('core_engine_code', models.CharField(editable=False, max_length=255, verbose_name='Core Engine Code')),
                ('tenant_code', models.CharField(max_length=255, verbose_name='Tenant')),
                ('site_code', models.CharField(editable=False, max_length=255, verbose_name='Site')),
                ('instance_code', models.CharField(editable=False, max_length=255, verbose_name='Environment/Instance')),
                ('activation_file_location', models.CharField(max_length=255, verbose_name='Activation File Location')),
                ('activation_key', models.CharField(editable=False, max_length=255, verbose_name='Activation Key')),
                ('validity_start_date', models.DateTimeField(editable=False, null=True, verbose_name='Validity Start Date')),
                ('validity_end_date', models.DateTimeField(editable=False, null=True, verbose_name='Validity End Date')),
                ('activation_dt', models.DateTimeField(editable=False, verbose_name='Activation Date Time')),
                ('deactivation_dt', models.DateTimeField(editable=False, null=True, verbose_name='Deactivation Date Time')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active ?')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created On')),
                ('last_updated_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Last Updated On')),
                ('last_updated_by', models.CharField(editable=False, max_length=64, verbose_name='Last Updated By')),
                ('catalog_engine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.CatalogEngine', verbose_name='Catalog Engine')),
            ],
            options={
                'db_table': 'engine_activations',
            },
        ),
        migrations.CreateModel(
            name='BatchLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_code', models.CharField(editable=False, max_length=255, verbose_name='Tenant')),
                ('site_code', models.CharField(editable=False, max_length=255, verbose_name='Site')),
                ('instance_code', models.CharField(editable=False, max_length=255, verbose_name='Environment/Instance')),
                ('batch_id', models.UUIDField(default=uuid.UUID('f306ab3b-14f8-4df5-b3aa-97b2971cb8ff'), verbose_name='Batch Id')),
                ('batch_status', models.CharField(choices=[('N', 'NEW'), ('I', 'IN PROGRESS'), ('E', 'ERROR'), ('S', 'SUCCESSFUL'), ('P', 'PLANNED/SCHEDULED'), ('T', 'TIMED OUT')], default=components.core.packages.lookups.BatchStatus['N'], editable=False, max_length=32, verbose_name='Batch Status')),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Start Time')),
                ('end_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='End Time')),
                ('duration', models.PositiveIntegerField(default=0, verbose_name='Duration (msec)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active ?')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created On')),
                ('last_updated_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Last Updated On')),
                ('last_updated_by', models.CharField(editable=False, max_length=64, verbose_name='Last Updated By')),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Datasets', verbose_name='Datasets')),
            ],
            options={
                'db_table': 'batch_logs',
            },
        ),
        migrations.AddField(
            model_name='attributes',
            name='catalog',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Catalogs'),
        ),
        migrations.AddField(
            model_name='attributes',
            name='datamodel',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.DataModels'),
        ),
        migrations.AddField(
            model_name='attributes',
            name='object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Objects'),
        ),
        migrations.AddField(
            model_name='aggregates',
            name='catalog',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Catalogs'),
        ),
        migrations.AddField(
            model_name='aggregates',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Containers', verbose_name='Container'),
        ),
        migrations.AddField(
            model_name='aggregates',
            name='datamodel',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.DataModels'),
        ),
        migrations.CreateModel(
            name='AggregateMeasures',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measure_display_name', models.CharField(max_length=255, verbose_name='Measure Display Name')),
                ('operators', models.CharField(choices=[('SUM', 'SUM'), ('MAX', 'MAX'), ('MIN', 'MIN'), ('AVG', 'AVG'), ('COUNT', 'COUNT')], max_length=255, verbose_name='Operators')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active ?')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created On')),
                ('last_updated_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Last Updated On')),
                ('last_updated_by', models.CharField(editable=False, max_length=64, verbose_name='Last Updated By')),
                ('aggregate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Aggregates', verbose_name='Aggregate')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Attributes', verbose_name='Attribute')),
                ('measure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Measures', verbose_name='Measure')),
            ],
            options={
                'db_table': 'aggregate_measures',
            },
        ),
        migrations.CreateModel(
            name='AggregateDimensions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dimension_type', models.CharField(choices=[('D', 'By Date'), ('V', 'By Value')], max_length=255, verbose_name='Dimension Type')),
                ('dimension_display_name', models.CharField(max_length=255, null=True, verbose_name='Dimension Display Name')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active ?')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created On')),
                ('last_updated_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Last Updated On')),
                ('last_updated_by', models.CharField(editable=False, max_length=64, verbose_name='Last Updated By')),
                ('aggregate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Aggregates', verbose_name='Aggregate')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Attributes', verbose_name='Attribute')),
                ('dimension', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adbizCatalogService.Dimensions', verbose_name='Dimension')),
            ],
            options={
                'db_table': 'aggregate_dimensions',
            },
        ),
    ]
